{"version":3,"sources":["components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetails.js","api/youtube.js","hooks/useVideos.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","searchQuery","setSearchQuery","className","onSubmit","event","preventDefault","onSearchQuerySubmit","type","value","onChange","target","VideoItem","onClick","videoSelected","video","alt","src","snippet","thumbnails","medium","url","title","VideoList","returnedVideos","videos","map","videoSelect","id","videoId","VideoDetails","videoSrc","description","axios","create","baseURL","params","part","maxResult","key","useVideos","defaultSearchQuery","setVideos","useEffect","searchquery","a","youtube","get","q","response","data","items","App","selectedVideo","setSelectedVideo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bdb8955.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const onInputChange = (event) => {\r\n    setSearchQuery(event.target.value); //this function can also be written inline down at the input element//\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onSearchQuerySubmit(searchQuery);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar ui segment\">\r\n      <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n        <div className=\"field\">\r\n          <label>Video Search</label>\r\n          <input type=\"text\" value={searchQuery} onChange={onInputChange} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"../styles/videoitem.css\";\r\n\r\n//const VideoItem = ({video, videoSelected}) => { //below line can be destructured like this, ie extracting the content of the props being received//then there'll be no need to use 'props.' when referencing the variables//\r\nconst VideoItem = (props) => {\r\n  return (\r\n    <div\r\n      className=\"video-item item\"\r\n      onClick={() => props.videoSelected(props.video)}\r\n    >\r\n      <img\r\n        className=\"ui image\"\r\n        alt=\"props.video.snippet.title\"\r\n        src={props.video.snippet.thumbnails.medium.url}\r\n      />\r\n      <div className=\"content\">\r\n        <div className=\"header\">{props.video.snippet.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n//information can be passed from a child to the parent thru a callback function passed into the props//\r\n","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\n//const VideoList = ({videos, videoSelect}) => { //below line can be destructured like this, ie extracting the content of the props being received//then there'll be no need to use 'props.' when referencing the variables//\r\nconst VideoList = (props) => {\r\n  const returnedVideos = props.videos.map((video) => {\r\n    return (\r\n      <VideoItem\r\n        key={video.id.videoId}\r\n        video={video}\r\n        videoSelected={props.videoSelect}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"ui relaxed divided list\">{returnedVideos}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\n\r\nconst VideoDetails = (props) => {\r\n  if (!props.video) {\r\n    return <div>Loading</div>;\r\n  } else {\r\n    const videoSrc = `https://www.youtube.com/embed/${props.video.id.videoId}`;\r\n    return (\r\n      <div>\r\n        <div className=\"ui embed\">\r\n          <iframe title=\"video player\" src={videoSrc} />\r\n        </div>\r\n        <div className=\"ui segment\">\r\n          <h4 className=\"ui header\">{props.video.snippet.title}</h4>;\r\n          <p>{props.video.snippet.description}</p>;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VideoDetails;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"AIzaSyANQToKlTgWTGNbyUYK3c4zUwzT6fYgAbw\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: \"snippet\",\r\n    maxResult: 5,\r\n    key: KEY,\r\n  },\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport youtube from \"../api/youtube\";\r\n\r\nconst useVideos = (defaultSearchQuery) => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onSearchQuerySubmit(defaultSearchQuery);\r\n  }, [defaultSearchQuery]);\r\n\r\n  const onSearchQuerySubmit = async (searchquery) => {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        q: searchquery,\r\n      },\r\n    });\r\n    setVideos(response.data.items);\r\n  };\r\n\r\n  return [videos, onSearchQuerySubmit];\r\n};\r\n\r\nexport default useVideos;\r\n","//coding the videos app using hooks//\nimport React, { useState, useEffect } from \"react\";\n//import youtube from \"./api/youtube\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\";\nimport VideoList from \"./components/VideoList\";\nimport VideoDetails from \"./components/VideoDetails\";\nimport useVideos from \"./hooks/useVideos\";\n\nconst App = () => {\n  // const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [videos, onSearchQuerySubmit] = useVideos(\"football\");\n\n  // useEffect(() => {\n  //   onSearchQuerySubmit(\"football\");\n  // }, []);\n\n  // const onSearchQuerySubmit = async (searchquery) => {\n  //   const response = await youtube.get(\"/search\", {\n  //     params: {\n  //       q: searchquery,\n  //     },\n  //   });\n  //   setVideos(response.data.items);\n  //   setSelectedVideo(response.data.items[0]);\n  // };\n\n  useEffect(() => {\n    setSelectedVideo(videos[0]);\n  }, [videos]);\n\n  return (\n    <div className=\"ui container\">\n      <SearchBar onSearchQuerySubmit={onSearchQuerySubmit} />\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"eleven wide column\">\n            <VideoDetails video={selectedVideo} />\n          </div>\n          <div className=\"five wide column\">\n            <VideoList\n              videos={videos}\n              videoSelect={(video) => setSelectedVideo(video)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}